<template>
  <q-page padding>
  <p>Registrar Utente</p>
  <p>Dados Pessoais</p>
  <br>
     <input-text-field v-model="utente.name" label="Nome" />
   <br>
   <input-text-field v-model="utente.surname"  label="Apelido" />
   <br>
     <input-number-phone-field v-model="utente.phoneNumber" label="Número de Telefone" />
   <br>
   <input-number-phone-field v-model="utente.whatsappNumber" label="Número de Telemovel com Whatsapp" />
    <br>
     <q-input rounded outlined v-model="text" label="Documento de Identidade" />
     <br>
       <div class="q-pa-md" style="max-width: 500px" >
      <div class="row">
    <q-input rounded outlined v-model="utente.datebirth" mask="date" :rules="['date']">
      <template v-slot:append>
        <q-icon name="event" class="cursor-pointer">
          <q-popup-proxy ref="qDateProxy" transition-show="scale" transition-hide="scale">
            <q-date v-model="utente.datebirth" mask="DD-MM-YYYY">
              <div class="row items-center justify-end">
                <q-btn v-close-popup label="Close" color="primary" flat />
              </div>
            </q-date>
          </q-popup-proxy>
        </q-icon>
      </template>
    </q-input>
      </div>
     <br>
     <div class="row">
    <input-number-field v-model="utente.age" label="Idade" :rules="[val => (val > 0 && val < 100) || 'Digite uma idade real']"  />
    </div>
  </div>
    <pre>{{utente}}</pre>
  </q-page>
</template>

<script>
export default {
  data () {
    return {
      utente: {
        name: '',
        surname: '',
        datebirth: ' ',
        phoneNumber: ' ',
        whatsappNumber: ' ',
        age: ''
      }
    }
  },
  components: {
    'input-text-field': require('components/Shared/InputFieldText.vue').default,
    'input-number-phone-field': require('components/Shared/InputFieldPhoneNumber.vue').default,
    'input-number-field': require('components/Shared/InputNumberField.vue').default
  }
}
</script>
 <template>
  <q-input rounded outlined :value="description"  @input="(event) => $emit('update:description', event.target.value)"  :rules="[val => !!val || 'Field Is Required']" />
</template>
<script>
export default {
    props: ['description']
}
</script>
<template>
  <q-page padding>
  <p>Registro Beneficiario</p>
  <p>Selecione a Data</p>
 <div class="q-pa-md">
    <q-date
      v-model="appointment.date"
      landscape
      mask="DD-MM-YYYY"
    />
  </div>
<p>Selecione a Hora Preferida</p>
  <div class="q-gutter-md">
      <q-time
        v-model="appointment.time"
        :hour-options="hourOptionsTime1"
        :minute-options="minuteOptionsTime1"
      />
    </div>
    <pre>{{appointment}}</pre>
  </q-page>
</template>
<script>
export default {
  data () {
    return {
        hourOptionsTime1: [8, 9, 10, 11, 12, 13, 14],
        minuteOptionsTime1: [0],
      appointment: {
        date: '',
        time: ''
      }
    }
  },
  components: {
  }
}
</script>
<template>
  <q-page padding>
  <p>Marcacao Consulta</p>
  <p>Selecione a Data</p>
 <div class="q-pa-md">
    <q-date
      v-model="appointment.date"
      landscape
    />
  </div>
<p>Selecione a Hora Preferida</p>
  <div class="q-gutter-md">
      <q-time
        v-model="appointment.time"
        :hour-options="hourOptionsTime1"
        :minute-options="minuteOptionsTime1"
      />
    </div>
    <pre>{{appointment}}</pre>
  </q-page>
</template>
<script>
export default {
  data () {
    return {
        hourOptionsTime1: [8, 9, 10, 11, 12, 13, 14],
        minuteOptionsTime1: [0],
      appointment: {
        date: '',
        time: ''
      }
    }
  },
  components: {
  }
}
</script>
module.exports = {
  // https://eslint.org/docs/user-guide/configuring#configuration-cascading-and-hierarchy
  // This option interrupts the configuration hierarchy at this file
  // Remove this if you have an higher level ESLint config file (it usually happens into a monorepos)
  root: true,

  parserOptions: {
    parser: '@babel/eslint-parser',
    ecmaVersion: 2018, // Allows for the parsing of modern ECMAScript features
    sourceType: 'module' // Allows for the use of imports
  },

  env: {
    browser: true
  },

  // Rules order is important, please avoid shuffling them
  extends: [
    // Base ESLint recommended rules
    // 'eslint:recommended',


    // Uncomment any of the lines below to choose desired strictness,
    // but leave only one uncommented!
    // See https://eslint.vuejs.org/rules/#available-rules
    'plugin:vue/vue3-essential', // Priority A: Essential (Error Prevention)
    // 'plugin:vue/vue3-strongly-recommended', // Priority B: Strongly Recommended (Improving Readability)
    // 'plugin:vue/vue3-recommended', // Priority C: Recommended (Minimizing Arbitrary Choices and Cognitive Overhead)

    'standard'

  ],

  plugins: [
    // https://eslint.vuejs.org/user-guide/#why-doesn-t-it-work-on-vue-file
    // required to lint *.vue files
    'vue',

  ],

  globals: {
    ga: 'readonly', // Google Analytics
    cordova: 'readonly',
    __statics: 'readonly',
    __QUASAR_SSR__: 'readonly',
    __QUASAR_SSR_SERVER__: 'readonly',
    __QUASAR_SSR_CLIENT__: 'readonly',
    __QUASAR_SSR_PWA__: 'readonly',
    process: 'readonly',
    Capacitor: 'readonly',
    chrome: 'readonly'
  },

  // add your custom rules here
  rules: {
    'indent':['off',2],
    // allow async-await
    'generator-star-spacing': 'off',
    // allow paren-less arrow functions
    'arrow-parens': 'off',
    'one-var': 'off',
    'no-void': 'off',
    'multiline-ternary': 'off',

    'import/first': 'off',
    'import/named': 'error',
    'import/namespace': 'error',
    'import/default': 'error',
    'import/export': 'error',
    'import/extensions': 'off',
    'import/no-unresolved': 'off',
    'import/no-extraneous-dependencies': 'off',
    'prefer-promise-reject-errors': 'off',
   

    // allow debugger during development only
    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off'
  }
}

const routes = [
  {
    path: '/',
    component: () => import('layouts/MainLayout.vue'),
    children: [
      { path: '', component: () => import('pages/Appointment.vue') }
    ]
  },

  // Always leave this as last one,
  // but you can also remove it
  {
    path: '/:catchAll(.*)*',
    component: () => import('pages/Error404.vue')
  }
]

export default routes
import { Model } from '@vuex-orm/core'
import Clinic from '../clinic/Clinic'
import Utente from '../utente/Utente'

export default class Appointment extends Model {
  static entity = 'appointments'

  static fields () {
    return {
      id: this.attr(null),
      appointmentDate: this.attr(''),
      time: this.attr(''),
      hasHappened: this.attr(''),
      orderNumber: this.attr(''),
      utente_id: this.attr(''),
      clinic_id: this.attr(''),
    
      // Relationships
      utente: this.belongsTo(Utente, 'utente_id'),
      clinic: this.belongsTo(Clinic, 'clinic_id'),
    }
  }
}<template>
     <q-input 
     rounded 
     outlined 
     v-model="text" 
     label="Nome" />

     
</template>
<<script>
export default {
    
}
</script> <template>
  <q-input  rounded outlined type="tel" :value="phoneNumber" @input="$emit('update:phoneNumber' ,$event)" :rules="[val => !!val || 'Field Is Required']" />
</template>
<script>
export default {
    props: ['phoneNumber']
}
</script>
